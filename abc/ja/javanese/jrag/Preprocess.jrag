/*
 * ServalCJ preprocess.
 * Copyright (C) Tetsuo Kamina, 2014
 */

aspect Preprocess {

  Vector<LayerDecl> Program.allLayerDecls = new Vector<LayerDecl>();

  public void Program.preprocessServalCJ() {
    Program.program = this;
    processAnonymousContexts();
    List<CompilationUnit> units = getCompilationUnits();
    for (int i=0; i<units.getNumChild(); i++) {
      CompilationUnit cu = units.getChildNoTransform(i);
      List<TypeDecl> decls = cu.getTypeDeclList();
      for (int j=0; j<decls.getNumChild(); j++) {
        TypeDecl decl = decls.getChildNoTransform(j);
        if (cu.fromSource()) {
          if (decl instanceof MonitorDecl) {
            MonitorDecl mDecl = (MonitorDecl)decl;
            mDecl.rememberCompilationUnit(cu);
            Program.monitorDecls.add(mDecl);
          } else if (decl instanceof ClassDecl) {
            Vector<LayerDecl> tmp = ((ClassDecl)decl).getAllLayers();
            for (Iterator<LayerDecl> iter = tmp.iterator(); iter.hasNext();) {
              allLayerDecls.add(iter.next());
            }
          }
        }
        cjTypes.add(cu.getPackageDecl() + "." + decl.getID());

      }
    }
  }

}